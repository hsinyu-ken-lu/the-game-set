{"ast":null,"code":"var _jsxFileName = \"/Users/kenfunk/Desktop/Kenfunk/MSCS-NEU/CS5610-Web Development/work_space/PROJECT_2/the-game-set/src/Game.js\",\n    _s = $RefreshSig$();\n\nimport './Game.css';\nimport Card from './Card.js';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  const [shapeArr, setShapeArr] = useState([\"rectangle\", \"triangle\", \"diamond\"]);\n  const [colorArr, setColorArr] = useState([\"yello\", \"green\", \"red\"]);\n  const [numArr, setNumArr] = useState([1, 2, 3]);\n  const [shadingArr, setShadingArr] = useState([\"fill\", \"transparent\", \"pattern-checkers\"]);\n  const [deck, setDeck] = useState([]);\n\n  const generate_deck = () => {\n    let card_deck = [];\n\n    for (let shape in shapeArr) {\n      for (let color in colorArr) {\n        for (let number in numArr) {\n          for (let shading in shadingArr) {\n            let card = {};\n            card.shape = shape;\n            card.color = color;\n            card.number = number;\n            card.shading = shading;\n            card_deck.push(card);\n          }\n        }\n      }\n    }\n\n    setDeck(card_deck);\n  };\n\n  const draw_cards = () => {};\n\n  const shuffle_card = () => {\n    for (let i = deck.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-zone\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        shape: \"triangle\",\n        color: \"yellow\",\n        number: \"3\",\n        shading: \"pattern-checkers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        shape: \"rectangle\",\n        color: \"red\",\n        number: \"2\",\n        shading: \"pattern-checkers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        shape: \"diamond\",\n        color: \"green\",\n        number: \"1\",\n        shading: \"pattern-checkers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"sYO1muaeiWbobXSpEpF6R+XoS7M=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/kenfunk/Desktop/Kenfunk/MSCS-NEU/CS5610-Web Development/work_space/PROJECT_2/the-game-set/src/Game.js"],"names":["Card","React","useState","Game","shapeArr","setShapeArr","colorArr","setColorArr","numArr","setNumArr","shadingArr","setShadingArr","deck","setDeck","generate_deck","card_deck","shape","color","number","shading","card","push","draw_cards","shuffle_card","i","length","j","Math","floor","random","temp","array"],"mappings":"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","sourcesContent":["import './Game.css';\nimport Card from './Card.js'\nimport React, { useState } from 'react';\n\nfunction Game() {\n\n    const [shapeArr, setShapeArr] = useState([\"rectangle\",\"triangle\",\"diamond\"]);\n    const [colorArr, setColorArr] = useState([\"yello\",\"green\",\"red\"]);\n    const [numArr, setNumArr] = useState([1,2,3]);\n    const [shadingArr, setShadingArr] = useState([\"fill\",\"transparent\",\"pattern-checkers\"]);\n\n    const [deck, setDeck] = useState([]);\n\n    const generate_deck = () => {\n        let card_deck = []\n        for(let shape in shapeArr){\n            for(let color in colorArr){\n                for(let number in numArr){\n                    for(let shading in shadingArr){\n                        let card = {};\n                        card.shape = shape;\n                        card.color = color;\n                        card.number = number;\n                        card.shading = shading;\n                        card_deck.push(card);\n                    }\n                }\n            }\n        }\n        setDeck(card_deck);\n    }\n\n    const draw_cards = () => {\n        \n    }\n\n    const shuffle_card = () => {\n        for (let i = deck.length - 1; i > 0; i--) {  \n            j = Math.floor(Math.random() * (i + 1)); \n            let temp = array[i]; \n            array[i] = array[j]; \n            array[j] = temp; \n        } \n    }\n\n    return (\n        <div>\n            <div className=\"card-zone\">\n                <Card shape=\"triangle\" color=\"yellow\" number=\"3\" shading=\"pattern-checkers\" />\n                <Card shape=\"rectangle\" color=\"red\" number=\"2\" shading=\"pattern-checkers\"/>\n                <Card shape=\"diamond\" color=\"green\" number=\"1\" shading=\"pattern-checkers\" />\n                <Card/>\n                <Card/>\n                <Card/>\n            </div>\n        </div>\n    );\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}