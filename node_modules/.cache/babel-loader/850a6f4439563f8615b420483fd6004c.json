{"ast":null,"code":"var _jsxFileName = \"/Users/kenfunk/Desktop/Kenfunk/MSCS-NEU/CS5610-Web Development/work_space/PROJECT_2/the-game-set/src/Game.js\",\n    _s = $RefreshSig$();\n\nimport './Game.css';\nimport Card from './Card.js';\nimport React, { useState, useContext, useEffect } from 'react';\nimport { store } from './Store.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  const globalState = useContext(store);\n  const {\n    state,\n    dispatch\n  } = globalState;\n\n  const generate_deck = () => {\n    dispatch({\n      type: \"GenerateDeck\"\n    });\n  };\n\n  const start_game = () => {\n    dispatch({\n      type: \"Reset\"\n    });\n  };\n\n  const draw_cards = () => {\n    dispatch({\n      type: \"Draw\"\n    });\n  };\n\n  const onClick = index => {\n    alert(\"index\");\n  };\n\n  const generate_cards = () => {\n    let elements = [];\n    let number = state.currentDeck.length;\n\n    for (let i = 0; i < number; i++) {\n      let card = state.currentDeck[i];\n      elements.push( /*#__PURE__*/_jsxDEV(Card, {\n        data_key: i,\n        customClickEvent: () => this.onClick.bind(this),\n        shape: card.shape,\n        color: card.color,\n        number: card.number,\n        shading: card.shading\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this));\n    }\n\n    return elements;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contoller_zone\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controller-button\",\n        onClick: () => generate_deck(),\n        children: \"GEN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controller-button\",\n        onClick: () => start_game(),\n        children: \"RESET\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controller-button\",\n        onClick: () => draw_cards(),\n        children: \"DRAW\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-zone\",\n      children: generate_cards()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"amC1/c9ldnJBSldn3lb055gydI4=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/kenfunk/Desktop/Kenfunk/MSCS-NEU/CS5610-Web Development/work_space/PROJECT_2/the-game-set/src/Game.js"],"names":["Card","React","useState","useContext","useEffect","store","Game","globalState","state","dispatch","generate_deck","type","start_game","draw_cards","onClick","index","alert","generate_cards","elements","number","currentDeck","length","i","card","push","bind","shape","color","shading"],"mappings":";;;AAAA,OAAO,YAAP;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,KAAT,QAAsB,YAAtB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAEZ,QAAMC,WAAW,GAAGJ,UAAU,CAACE,KAAD,CAA9B;AACA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBF,WAA5B;;AAEA,QAAMG,aAAa,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrBH,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAR;AACH,GAFD;;AAIA,QAAME,UAAU,GAAG,MAAM;AACrBJ,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMG,OAAO,GAAIC,KAAD,IAAW;AACvBC,IAAAA,KAAK,CAAC,OAAD,CAAL;AACH,GAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM;AACzB,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,MAAM,GAAGX,KAAK,CAACY,WAAN,CAAkBC,MAA/B;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,MAAnB,EAA2BG,CAAC,EAA5B,EAA+B;AAC3B,UAAIC,IAAI,GAAGf,KAAK,CAACY,WAAN,CAAkBE,CAAlB,CAAX;AACAJ,MAAAA,QAAQ,CAACM,IAAT,eACI,QAAC,IAAD;AAAc,QAAA,QAAQ,EAAEF,CAAxB;AAA2B,QAAA,gBAAgB,EAAE,MAAI,KAAKR,OAAL,CAAaW,IAAb,CAAkB,IAAlB,CAAjD;AAA0E,QAAA,KAAK,EAAEF,IAAI,CAACG,KAAtF;AAA6F,QAAA,KAAK,EAAEH,IAAI,CAACI,KAAzG;AAAgH,QAAA,MAAM,EAAEJ,IAAI,CAACJ,MAA7H;AAAqI,QAAA,OAAO,EAAEI,IAAI,CAACK;AAAnJ,SAAWN,CAAX;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;;AACD,WAAOJ,QAAP;AACH,GAVD;;AAYA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,OAAO,EAAI,MAAMR,aAAa,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,OAAO,EAAI,MAAME,UAAU,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,OAAO,EAAI,MAAMC,UAAU,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAgBI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKI,cAAc;AADnB;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAvDQX,I;;KAAAA,I;AAyDT,eAAeA,IAAf","sourcesContent":["import './Game.css';\nimport Card from './Card.js'\nimport React, { useState, useContext, useEffect } from 'react';\nimport { store } from './Store.js';\n\nfunction Game() {\n\n    const globalState = useContext(store);\n    const { state, dispatch } = globalState;\n\n    const generate_deck = () => {\n        dispatch({type:\"GenerateDeck\"});\n    }\n   \n    const start_game = () => {\n        dispatch({type:\"Reset\"});\n    }\n\n    const draw_cards = () => {\n        dispatch({type:\"Draw\"});\n    }\n\n    const onClick = (index) => {\n        alert(\"index\")\n    }\n\n    const generate_cards = () => {\n        let elements = [];\n        let number = state.currentDeck.length;\n        for(let i = 0; i < number; i++){\n            let card = state.currentDeck[i];\n            elements.push(\n                <Card key={i} data_key={i} customClickEvent={()=>this.onClick.bind(this)} shape={card.shape} color={card.color} number={card.number} shading={card.shading}/>\n            );\n        }\n        return elements;\n    }\n\n    return (\n        <div>\n            <div className=\"contoller_zone\">\n                <div className=\"controller-button\" onClick = {() => generate_deck()}>\n                    GEN\n                </div>\n                <div className=\"controller-button\" onClick = {() => start_game()}>\n                    RESET\n                </div>\n                <div className=\"controller-button\" onClick = {() => draw_cards()}>\n                    DRAW\n                </div>\n                {/* <div className=\"controller-button\">\n                    {state.deck.length - state.currentDeck.length} \n                    {JSON.stringify(state.clickedCard)}\n                </div> */}\n            </div>\n            <div className=\"card-zone\">\n                {generate_cards()}\n            </div>\n        </div>\n    );\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}