{"ast":null,"code":"var _jsxFileName = \"/Users/kenfunk/Desktop/Kenfunk/MSCS-NEU/CS5610-Web Development/work_space/PROJECT_2/the-game-set/src/Game.js\",\n    _s = $RefreshSig$();\n\nimport './Game.css';\nimport Card from './Card.js';\nimport React, { useContext, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { store } from './Store.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  const globalState = useContext(store);\n  const {\n    state,\n    dispatch\n  } = globalState;\n  const {\n    name\n  } = useParams();\n  useEffect(() => {\n    dispatch({\n      type: \"GenerateDeck\",\n      level: name\n    });\n    dispatch({\n      type: \"Reset\"\n    });\n  }, [dispatch, name]);\n  useEffect(() => {\n    console.log(name);\n  }, [name]);\n  useEffect(() => {\n    let timerId;\n\n    if (state.clickedCardLength === 3) {\n      timerId = setTimeout(() => {\n        dispatch({\n          type: \"Check\"\n        });\n      }, 500);\n    }\n\n    return () => clearTimeout(timerId);\n  }, [state.clickedCardLength, dispatch]);\n\n  const reset = () => {\n    dispatch({\n      type: \"Reset\"\n    });\n  };\n\n  const drawCards = () => {\n    dispatch({\n      type: \"Draw\"\n    });\n  };\n\n  const generateCards = () => {\n    let elements = [];\n    let number = state.currentDeck.length;\n\n    for (let i = 0; i < number; i++) {\n      let card = state.currentDeck[i];\n      elements.push( /*#__PURE__*/_jsxDEV(Card, {\n        data_key: i,\n        shape: card.shape,\n        color: card.color,\n        number: card.number,\n        shading: card.shading\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this));\n    }\n\n    return elements;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"landing-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contoller-zone\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controller-button\",\n        onClick: () => reset(),\n        children: \"RESET\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controller-button\",\n        onClick: () => drawCards(),\n        children: \"DRAW\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messege-zone\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: state.messege\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-zone\",\n      children: generateCards()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"GI8tGnQgD+n9UgkXLlMZL74mpZM=\", false, function () {\n  return [useParams];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/kenfunk/Desktop/Kenfunk/MSCS-NEU/CS5610-Web Development/work_space/PROJECT_2/the-game-set/src/Game.js"],"names":["Card","React","useContext","useEffect","useParams","store","Game","globalState","state","dispatch","name","type","level","console","log","timerId","clickedCardLength","setTimeout","clearTimeout","reset","drawCards","generateCards","elements","number","currentDeck","length","i","card","push","shape","color","shading","messege"],"mappings":";;;AAAA,OAAO,YAAP;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,KAAT,QAAsB,YAAtB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAEZ,QAAMC,WAAW,GAAGL,UAAU,CAACG,KAAD,CAA9B;AACA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBF,WAA5B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAWN,SAAS,EAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAC,cAAN;AAAsBC,MAAAA,KAAK,EAACF;AAA5B,KAAD,CAAR;AACAD,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAR;AACH,GAHQ,EAGP,CAACF,QAAD,EAAWC,IAAX,CAHO,CAAT;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACH,GAFQ,EAEP,CAACA,IAAD,CAFO,CAAT;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,OAAJ;;AACA,QAAIP,KAAK,CAACQ,iBAAN,KAA4B,CAAhC,EAAmC;AAC/BD,MAAAA,OAAO,GAAGE,UAAU,CAAC,MAAM;AACvBR,QAAAA,QAAQ,CAAC;AAACE,UAAAA,IAAI,EAAC;AAAN,SAAD,CAAR;AACH,OAFmB,EAEjB,GAFiB,CAApB;AAGH;;AACD,WAAO,MAAMO,YAAY,CAACH,OAAD,CAAzB;AACH,GARQ,EAQP,CAACP,KAAK,CAACQ,iBAAP,EAA0BP,QAA1B,CARO,CAAT;;AAUA,QAAMU,KAAK,GAAG,MAAM;AAChBV,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMS,SAAS,GAAG,MAAM;AACpBX,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMU,aAAa,GAAG,MAAM;AACxB,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,MAAM,GAAGf,KAAK,CAACgB,WAAN,CAAkBC,MAA/B;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,MAAnB,EAA2BG,CAAC,EAA5B,EAA+B;AAC3B,UAAIC,IAAI,GAAGnB,KAAK,CAACgB,WAAN,CAAkBE,CAAlB,CAAX;AACAJ,MAAAA,QAAQ,CAACM,IAAT,eACI,QAAC,IAAD;AAAc,QAAA,QAAQ,EAAEF,CAAxB;AAA2B,QAAA,KAAK,EAAEC,IAAI,CAACE,KAAvC;AAA8C,QAAA,KAAK,EAAEF,IAAI,CAACG,KAA1D;AAAiE,QAAA,MAAM,EAAEH,IAAI,CAACJ,MAA9E;AAAsF,QAAA,OAAO,EAAEI,IAAI,CAACI;AAApG,SAAWL,CAAX;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;;AACD,WAAOJ,QAAP;AACH,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,OAAO,EAAI,MAAMH,KAAK,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,OAAO,EAAI,MAAMC,SAAS,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI;AAAA,kBAAKZ,KAAK,CAACwB;AAAX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ,eAYI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKX,aAAa;AADlB;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA/DQf,I;UAIYF,S;;;KAJZE,I;AAiET,eAAeA,IAAf","sourcesContent":["import './Game.css';\nimport Card from './Card.js'\nimport React, { useContext, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { store } from './Store.js';\n\nfunction Game() {\n\n    const globalState = useContext(store);\n    const { state, dispatch } = globalState;\n    const { name } = useParams();\n\n    useEffect(() => {\n        dispatch({type:\"GenerateDeck\", level:name});\n        dispatch({type:\"Reset\"});\n    },[dispatch, name]); \n\n    useEffect(() => {\n        console.log(name)\n    },[name]); \n\n    useEffect(() => {\n        let timerId;\n        if (state.clickedCardLength === 3) {\n            timerId = setTimeout(() => {\n                dispatch({type:\"Check\"});\n            }, 500);\n        }\n        return () => clearTimeout(timerId);\n    },[state.clickedCardLength, dispatch]); \n\n    const reset = () => {\n        dispatch({type:\"Reset\"});\n    }\n\n    const drawCards = () => {\n        dispatch({type:\"Draw\"});\n    }\n\n    const generateCards = () => {\n        let elements = [];\n        let number = state.currentDeck.length;\n        for(let i = 0; i < number; i++){\n            let card = state.currentDeck[i];\n            elements.push(\n                <Card key={i} data_key={i} shape={card.shape} color={card.color} number={card.number} shading={card.shading}/>\n            );\n        }\n        return elements;\n    }\n\n    return (\n        <div className=\"landing-page-container\">\n            <div className=\"contoller-zone\">\n                <div className=\"controller-button\" onClick = {() => reset()}>\n                    RESET\n                </div>\n                <div className=\"controller-button\" onClick = {() => drawCards()}>\n                    DRAW\n                </div>\n            </div>\n            <div className=\"messege-zone\">\n                <h3>{state.messege}</h3>\n            </div>\n            <div className=\"card-zone\">\n                {generateCards()}\n            </div>\n        </div>\n    );\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}