{"ast":null,"code":"var _jsxFileName = \"/Users/kenfunk/Desktop/Kenfunk/MSCS-NEU/CS5610-Web Development/work_space/PROJECT_2/the-game-set/src/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport './Card.css';\nimport { store } from './Store.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  const globalState = useContext(store);\n  const {\n    state,\n    dispatch\n  } = globalState;\n\n  const get_fill = () => {\n    let result = \"\";\n\n    if (props.shading === \"fill\") {\n      result = props.color;\n    } else if (props.shading === \"pattern-checkers\") {\n      result = \"url(#\" + props.color + \")\";\n    } else {\n      result = \"transparent\";\n    }\n\n    return result;\n  };\n\n  const generate_card = () => {\n    var elements = [];\n\n    for (let i = 0; i < props.number; i++) {\n      if (props.shape === \"rectangle\") {\n        elements.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"svg-container\",\n            children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n              points: \"10,10 40,10 40,90 10,90\",\n              className: \"rectangle\",\n              stroke: props.color,\n              fill: get_fill()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this));\n      } else if (props.shape === \"triangle\") {\n        elements.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"svg-container\",\n            children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n              points: \"25,10 40,90 10,90\",\n              className: \"triangle\",\n              stroke: props.color,\n              fill: get_fill()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this));\n      } else {\n        elements.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"svg-container\",\n            children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n              points: \"25,10 40,50 25,90 10,50\",\n              className: \"diamond\",\n              stroke: props.color,\n              fill: get_fill()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this));\n      }\n    }\n\n    return elements;\n  };\n\n  const card_on_click = data_key => {\n    console.log(data_key);\n    dispatch({\n      type: \"CARDCLICK\",\n      data_key: data_key\n    });\n  };\n\n  const getClassName = () => {\n    if (state.clickedCard.includes(props.data_key)) {\n      return [\"card-container\", \"card-clicked\"].join(\" \");\n    } else {\n      return [\"card-container\", \"card-unclicked\"].join(\" \");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    data_key: props.data_key,\n    className: getClassName(),\n    onClick: () => card_on_click(props.data_key),\n    children: [generate_card(), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"0\",\n      height: \"0\",\n      children: /*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"pattern\", {\n          id: props.color,\n          x: \"0\",\n          y: \"0\",\n          width: \"10\",\n          height: \"10\",\n          patternUnits: \"userSpaceOnUse\",\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            fill: props.color,\n            x: \"0\",\n            width: \"5\",\n            height: \"5\",\n            y: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n            fill: props.color,\n            x: \"5\",\n            width: \"5\",\n            height: \"5\",\n            y: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"amC1/c9ldnJBSldn3lb055gydI4=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/kenfunk/Desktop/Kenfunk/MSCS-NEU/CS5610-Web Development/work_space/PROJECT_2/the-game-set/src/Card.js"],"names":["React","useContext","store","Card","props","globalState","state","dispatch","get_fill","result","shading","color","generate_card","elements","i","number","shape","push","card_on_click","data_key","console","log","type","getClassName","clickedCard","includes","join"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport './Card.css'\nimport { store } from './Store.js';\n\nfunction Card(props) {\n\n    const globalState = useContext(store);\n    const { state, dispatch } = globalState;\n\n    const get_fill = () => {\n        let result = \"\";\n        if(props.shading === \"fill\"){\n            result = props.color;\n        }else if(props.shading === \"pattern-checkers\"){\n            result = \"url(#\" + props.color + \")\";\n        }else{\n            result = \"transparent\"\n        }\n        return result;\n    }\n\n    const generate_card = () => {\n        var elements = [];\n        for(let i =0; i < props.number; i++){\n            if(props.shape === \"rectangle\"){\n                elements.push(\n                    <div key={i}>\n                        <svg className=\"svg-container\">\n                            <polygon points=\"10,10 40,10 40,90 10,90\" className=\"rectangle\" stroke={props.color} fill={get_fill()}/>\n                        </svg>\n                    </div>\n                );\n            }else if(props.shape === \"triangle\"){\n                elements.push(\n                    <div key={i}>\n                        <svg className=\"svg-container\">\n                            <polygon points=\"25,10 40,90 10,90\" className=\"triangle\" stroke={props.color} fill={get_fill()}/>\n                        </svg>\n                    </div>\n                );\n            }else{\n                elements.push(\n                    <div key={i}>\n                        <svg className=\"svg-container\">\n                            <polygon points=\"25,10 40,50 25,90 10,50\" className=\"diamond\" stroke={props.color} fill={get_fill()}/>\n                        </svg>\n                    </div>\n                );\n            }\n        }\n        return elements;\n    }\n\n    const card_on_click = (data_key) => {\n        console.log(data_key)\n        dispatch({type:\"CARDCLICK\", data_key:data_key});\n\n    }\n\n    const getClassName = () => {\n        if(state.clickedCard.includes(props.data_key)){\n            return [\"card-container\", \"card-clicked\"].join(\" \");\n        }else{\n            return [\"card-container\", \"card-unclicked\"].join(\" \");\n        }\n    }\n\n    return (\n        <div data_key={props.data_key} className={getClassName()} onClick={()=>card_on_click(props.data_key)}>\n            {generate_card()}\n            <svg width=\"0\" height=\"0\">\n                <defs>\n                    <pattern id={props.color} x=\"0\" y=\"0\" width=\"10\" height=\"10\" patternUnits=\"userSpaceOnUse\">\n                        <rect fill={props.color} x=\"0\" width=\"5\" height=\"5\" y=\"0\"></rect>\n                        <rect fill={props.color}  x=\"5\" width=\"5\" height=\"5\" y=\"5\"></rect>\n                    </pattern>\n                </defs>\n            </svg>\n        </div>\n    );\n}\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}