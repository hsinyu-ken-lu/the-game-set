{"ast":null,"code":"var _jsxFileName = \"/Users/kenfunk/Desktop/Kenfunk/MSCS-NEU/CS5610-Web Development/work_space/PROJECT_2/the-game-set/src/Store.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  shape: [\"rectangle\", \"triangle\", \"diamond\"],\n  color: [\"yellow\", \"green\", \"red\"],\n  number: [1, 2, 3],\n  shading: [\"fill\", \"transparent\", \"pattern-checkers\"],\n  deck: [],\n  currentDeck: [],\n  currentIndex: 0\n};\nconst store = /*#__PURE__*/createContext(initialState);\nconst {\n  Provider\n} = store;\n\nconst StateProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case 'GenerateDeck':\n        console.log(JSON.stringify(state.shape));\n        let card_deck = [];\n\n        for (let shape in state.shape) {\n          for (let color in state.color) {\n            for (let number in state.number) {\n              for (let shading in state.shading) {\n                let card = {};\n                card.shape = state.shape[shape];\n                card.color = state.color[color];\n                card.number = state.number[number];\n                card.shading = state.shading[shading];\n                card_deck.push(card);\n              }\n            }\n          }\n        }\n\n        return { ...state,\n          deck: card_deck\n        };\n\n      case 'Reset':\n        // shuffle_card\n        let new_deck = state.deck;\n\n        for (let i = new_deck.length - 1; i > 0; i--) {\n          let j = Math.floor(Math.random() * (i + 1));\n          let temp = new_deck[i];\n          new_deck[i] = new_deck[j];\n          new_deck[j] = temp;\n        } // create_new_current_deck();\n\n\n        let new_current_deck = [...state.currentDeck];\n\n        for (let i = 0; i < new_current_deck.length; i++) {\n          new_current_deck.splice(-1, 1);\n          ppp;\n        }\n\n        for (let i = 0; i < 12; i++) {\n          new_current_deck.push(new_deck[i]);\n        }\n\n        return { ...state,\n          deck: new_deck,\n          currentDeck: [...new_current_deck],\n          currentIndex: 12\n        };\n\n      case 'Draw':\n        let add_deck = [];\n        console.log(state.currentDeck.length + \", \" + state.deck.length);\n\n        if (state.currentDeck.length < state.deck.length) {\n          for (let i = state.currentIndex; i < state.currentIndex + 3; i++) {\n            add_deck.push(state.deck[i]);\n          }\n        } else {\n          alert(\"No More Cards\");\n          return { ...state\n          };\n        }\n\n        return { ...state,\n          currentDeck: [...state.currentDeck, ...add_deck],\n          currentIndex: state.currentIndex + 3\n        };\n\n      default:\n        throw new Error();\n    }\n\n    ;\n  }, initialState);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 10\n  }, this);\n};\n\n_s(StateProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = StateProvider;\nexport { store, StateProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"sources":["/Users/kenfunk/Desktop/Kenfunk/MSCS-NEU/CS5610-Web Development/work_space/PROJECT_2/the-game-set/src/Store.js"],"names":["React","createContext","useReducer","initialState","shape","color","number","shading","deck","currentDeck","currentIndex","store","Provider","StateProvider","children","state","dispatch","action","type","console","log","JSON","stringify","card_deck","card","push","new_deck","i","length","j","Math","floor","random","temp","new_current_deck","splice","ppp","add_deck","alert","Error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,QAA+C,OAA/C;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAC,CAAC,WAAD,EAAa,UAAb,EAAwB,SAAxB,CADW;AAEjBC,EAAAA,KAAK,EAAC,CAAC,QAAD,EAAU,OAAV,EAAkB,KAAlB,CAFW;AAGjBC,EAAAA,MAAM,EAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAHU;AAIjBC,EAAAA,OAAO,EAAC,CAAC,MAAD,EAAQ,aAAR,EAAsB,kBAAtB,CAJS;AAKjBC,EAAAA,IAAI,EAAC,EALY;AAMjBC,EAAAA,WAAW,EAAC,EANK;AAOjBC,EAAAA,YAAY,EAAC;AAPI,CAArB;AASA,MAAMC,KAAK,gBAAGV,aAAa,CAACE,YAAD,CAA3B;AACA,MAAM;AAAES,EAAAA;AAAF,IAAeD,KAArB;;AAEA,MAAME,aAAa,GAAG,CAAE;AAAEC,EAAAA;AAAF,CAAF,KAAoB;AAAA;;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,UAAU,CAAC,CAACa,KAAD,EAAQE,MAAR,KAAmB;AACpD,YAAOA,MAAM,CAACC,IAAd;AACA,WAAK,cAAL;AACIC,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeP,KAAK,CAACX,KAArB,CAAZ;AACA,YAAImB,SAAS,GAAG,EAAhB;;AACA,aAAI,IAAInB,KAAR,IAAiBW,KAAK,CAACX,KAAvB,EAA6B;AACzB,eAAI,IAAIC,KAAR,IAAiBU,KAAK,CAACV,KAAvB,EAA6B;AACzB,iBAAI,IAAIC,MAAR,IAAkBS,KAAK,CAACT,MAAxB,EAA+B;AAC3B,mBAAI,IAAIC,OAAR,IAAmBQ,KAAK,CAACR,OAAzB,EAAiC;AAC7B,oBAAIiB,IAAI,GAAG,EAAX;AACAA,gBAAAA,IAAI,CAACpB,KAAL,GAAaW,KAAK,CAACX,KAAN,CAAYA,KAAZ,CAAb;AACAoB,gBAAAA,IAAI,CAACnB,KAAL,GAAaU,KAAK,CAACV,KAAN,CAAYA,KAAZ,CAAb;AACAmB,gBAAAA,IAAI,CAAClB,MAAL,GAAcS,KAAK,CAACT,MAAN,CAAaA,MAAb,CAAd;AACAkB,gBAAAA,IAAI,CAACjB,OAAL,GAAeQ,KAAK,CAACR,OAAN,CAAcA,OAAd,CAAf;AACAgB,gBAAAA,SAAS,CAACE,IAAV,CAAeD,IAAf;AACH;AACJ;AACJ;AACJ;;AACD,eAAO,EACH,GAAGT,KADA;AACOP,UAAAA,IAAI,EAACe;AADZ,SAAP;;AAIJ,WAAK,OAAL;AACI;AACA,YAAIG,QAAQ,GAAGX,KAAK,CAACP,IAArB;;AACA,aAAK,IAAImB,CAAC,GAAGD,QAAQ,CAACE,MAAT,GAAkB,CAA/B,EAAkCD,CAAC,GAAG,CAAtC,EAAyCA,CAAC,EAA1C,EAA8C;AAC1C,cAAIE,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAR;AACA,cAAIM,IAAI,GAAGP,QAAQ,CAACC,CAAD,CAAnB;AACAD,UAAAA,QAAQ,CAACC,CAAD,CAAR,GAAcD,QAAQ,CAACG,CAAD,CAAtB;AACAH,UAAAA,QAAQ,CAACG,CAAD,CAAR,GAAcI,IAAd;AACH,SARL,CAUI;;;AACA,YAAIC,gBAAgB,GAAG,CAAC,GAAGnB,KAAK,CAACN,WAAV,CAAvB;;AACA,aAAI,IAAIkB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGO,gBAAgB,CAACN,MAApC,EAA4CD,CAAC,EAA7C,EAAgD;AAC5CO,UAAAA,gBAAgB,CAACC,MAAjB,CAAwB,CAAC,CAAzB,EAA2B,CAA3B;AAA8BC,UAAAA,GAAG;AACpC;;AAED,aAAI,IAAIT,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA2B;AACvBO,UAAAA,gBAAgB,CAACT,IAAjB,CAAsBC,QAAQ,CAACC,CAAD,CAA9B;AACH;;AAED,eAAO,EACH,GAAGZ,KADA;AACOP,UAAAA,IAAI,EAACkB,QADZ;AACsBjB,UAAAA,WAAW,EAAC,CAAC,GAAGyB,gBAAJ,CADlC;AACyDxB,UAAAA,YAAY,EAAC;AADtE,SAAP;;AAIJ,WAAK,MAAL;AACI,YAAI2B,QAAQ,GAAG,EAAf;AACAlB,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACN,WAAN,CAAkBmB,MAAlB,GAAyB,IAAzB,GAA8Bb,KAAK,CAACP,IAAN,CAAWoB,MAArD;;AACA,YAAGb,KAAK,CAACN,WAAN,CAAkBmB,MAAlB,GAA2Bb,KAAK,CAACP,IAAN,CAAWoB,MAAzC,EAAgD;AAC5C,eAAI,IAAID,CAAC,GAAGZ,KAAK,CAACL,YAAlB,EAAgCiB,CAAC,GAAGZ,KAAK,CAACL,YAAN,GAAmB,CAAvD,EAA0DiB,CAAC,EAA3D,EAA8D;AAC1DU,YAAAA,QAAQ,CAACZ,IAAT,CAAcV,KAAK,CAACP,IAAN,CAAWmB,CAAX,CAAd;AACH;AACJ,SAJD,MAIK;AACDW,UAAAA,KAAK,CAAC,eAAD,CAAL;AACA,iBAAO,EACH,GAAGvB;AADA,WAAP;AAGH;;AACD,eAAO,EACH,GAAGA,KADA;AACON,UAAAA,WAAW,EAAC,CAAC,GAAGM,KAAK,CAACN,WAAV,EAAuB,GAAG4B,QAA1B,CADnB;AACwD3B,UAAAA,YAAY,EAACK,KAAK,CAACL,YAAN,GAAmB;AADxF,SAAP;;AAGJ;AACI,cAAM,IAAI6B,KAAJ,EAAN;AA/DJ;;AAgEC;AACJ,GAlEmC,EAkEjCpC,YAlEiC,CAApC;AAoEF,sBAAO,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEY,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAjB;AAAA,cAAuCF;AAAvC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAtED;;GAAMD,a;;KAAAA,a;AAwEN,SAASF,KAAT,EAAgBE,aAAhB","sourcesContent":["import React, {createContext, useReducer} from 'react';\n\nconst initialState = {\n    shape:[\"rectangle\",\"triangle\",\"diamond\"],\n    color:[\"yellow\",\"green\",\"red\"],\n    number:[1,2,3],\n    shading:[\"fill\",\"transparent\",\"pattern-checkers\"],\n    deck:[],\n    currentDeck:[],\n    currentIndex:0\n};\nconst store = createContext(initialState);\nconst { Provider } = store;\n\nconst StateProvider = ( { children } ) => {\n    const [state, dispatch] = useReducer((state, action) => {\n        switch(action.type) {\n        case 'GenerateDeck':\n            console.log(JSON.stringify(state.shape));\n            let card_deck = [];\n            for(let shape in state.shape){\n                for(let color in state.color){\n                    for(let number in state.number){\n                        for(let shading in state.shading){\n                            let card = {};\n                            card.shape = state.shape[shape];\n                            card.color = state.color[color];\n                            card.number = state.number[number];\n                            card.shading = state.shading[shading];\n                            card_deck.push(card);\n                        }\n                    }\n                }\n            }\n            return {\n                ...state, deck:card_deck\n            };\n\n        case 'Reset':\n            // shuffle_card\n            let new_deck = state.deck;\n            for (let i = new_deck.length - 1; i > 0; i--) {  \n                let j = Math.floor(Math.random() * (i + 1)); \n                let temp = new_deck[i]; \n                new_deck[i] = new_deck[j]; \n                new_deck[j] = temp; \n            }\n\n            // create_new_current_deck();\n            let new_current_deck = [...state.currentDeck];\n            for(let i = 0; i < new_current_deck.length; i++){\n                new_current_deck.splice(-1,1);ppp\n            }\n\n            for(let i = 0; i < 12; i++){\n                new_current_deck.push(new_deck[i]);\n            }\n        \n            return {\n                ...state, deck:new_deck, currentDeck:[...new_current_deck], currentIndex:12\n            };\n\n        case 'Draw':\n            let add_deck = [];\n            console.log(state.currentDeck.length+\", \"+state.deck.length)\n            if(state.currentDeck.length < state.deck.length){\n                for(let i = state.currentIndex; i < state.currentIndex+3; i++){\n                    add_deck.push(state.deck[i]);\n                }\n            }else{\n                alert(\"No More Cards\");\n                return {\n                    ...state\n                };\n            }\n            return {\n                ...state, currentDeck:[...state.currentDeck, ...add_deck], currentIndex:state.currentIndex+3\n            };\n        default:\n            throw new Error();\n        };\n    }, initialState);\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StateProvider }"]},"metadata":{},"sourceType":"module"}